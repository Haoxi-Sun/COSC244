Q1 What two ways can you use to create a thread? Explain each in a couple of sentences.
   extends Thread - declare a class to be subclass of Thread. This subclass should override the run method of class Thread. 
   implement Runnable - declare a class that implements the Runnable interface. An instance of the class can then be allocated, passed as an argument when creating Thread, and started.
   
Q2 Whichever way you choose to create a thread, what is the name of the method that must be part of your thread's implementation?
   run().

Q3 What method does a program call to start a thread running?
   start().

Q4 What lines in Server.java are different?
   Line 14 & 15.

Q5 Explain what lines 14&15 do.
   Beginning to the execute two Threads.

Q6 Would it matter if we reversed lines 14&15? Why or why not?
   It doen't matter, 
   
Q7 Write the code for Client.java which will work with Server.java using ReadWriteThread.java.
   HINT:Study the code path executed in TCPExample.java when a client is starte

   // Client.java

import java.net.*;

public class Client{

    public static void main(String[] args){
        try{
            int port = Integer.parseInt(args[0]);
            Socket socket = new Socket(args[1], port);
            System.err.println("Connected to "+args[1]+" on port "+ port);
            new ReadWriteThread(System.in, socket.getOutputStream(), "").start();
            new ReadWriteThread(socket.getInputStream(), System.out,"--> ").start();
        } catch(Exception e){
            e.printStackTrace();
            System.err.println("\nUsage: java Client <port>");
        }
    }
}


Q8 Why is this happening?
   Because the Thread are running at the same time.
